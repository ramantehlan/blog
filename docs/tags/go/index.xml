<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on Official Blog of Raman Tehlan</title>
    <link>https://ramantehlan.github.io/blog/tags/go/</link>
    <description>Recent content in go on Official Blog of Raman Tehlan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Raman Tehlan</copyright>
    <lastBuildDate>Thu, 10 Aug 2023 23:46:11 +0530</lastBuildDate>
    
	<atom:link href="https://ramantehlan.github.io/blog/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Server Profiling with pprof</title>
      <link>https://ramantehlan.github.io/blog/post/2023/go-pprof/</link>
      <pubDate>Thu, 10 Aug 2023 23:46:11 +0530</pubDate>
      
      <guid>https://ramantehlan.github.io/blog/post/2023/go-pprof/</guid>
      <description>Before I start writing about profiling, I would like to mention that this blog is not a comprehensive guide to profiling. This is more like a quick start guide for me. I am sharing it here, just in case it helps someone else.If it&amp;rsquo;s alright with you, we can begin.
What is profiling? It&amp;rsquo;s a way to measure the performance of your application. It can be used to find bottlenecks in CPU, memeory, and other resources.</description>
    </item>
    
  </channel>
</rss>